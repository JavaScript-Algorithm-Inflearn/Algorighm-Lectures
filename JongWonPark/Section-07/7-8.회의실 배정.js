/*
[문제] 회의실 배정 - 정렬, 그리디
- 한 개의 회의실이 있는데 이를 사용하고자 하는 n개의 회의들에 대하여 회의실 사용표를 만들려고 한다.
- 각 회의에 대해 시작시간과 끝나는 시간이 주어져 있고,
- 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 최대 수의 회의를 찾아라.
- 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다.

[입력]
- 첫째 줄에 회의의 수 n(1<=n<=100,000)이 주어진다.
- 둘째 줄부터 n+1줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작 시간과 끝나는 시간이 주어진다.
- 회의의 시작시간과 끝나는 시간의 조건은 (시작시간 <= 끝나는 시간)입니다.

[출력]
- 첫째 줄에 최대 사용할 수 있는 회의 수를 출력하여라.

[입력예제 1]
- [ [1, 4], [2, 3], [3, 5], [4, 6], [5, 7] ]

[출력예제 1]
- 3

[입력예제 2]
- [ [3, 3], [1, 3], [2, 3] ]

[출력예제 2]
- 2

/** 레퍼런스 - 시간복잡도 N * log(N) */
const reference = (arr) => {
  const sortedArr = [...arr].sort((a, b) => {
    if (a[1] === b[1]) return a[0] - b[0];
    return a[1] - b[1];
  });
  let end = 0;
  let result = 0;

  for (const x of sortedArr) {
    if (end <= x[0]) {
      end = x[1];
      result++;
    }
  }

  return result;
};

/** 테스트 케이스1 */
let arr = [
  [1, 4],
  [2, 3],
  [3, 5],
  [4, 6],
  [5, 7],
];

console.log(1, reference(arr)); // 3

/** 테스트 케이스2 */
arr = [
  [3, 3],
  [1, 3],
  [2, 3],
];

console.log(2, reference(arr)); // 2

/*
[문제] 장난꾸러기 현수 - 정렬
- 새 학기가 시작되었습니다. 현수는 새 짝꿍을 만나 너무 신이 났습니다.
- 현수네 반에는 N명의 학생들이 있습니다.
- 선생님은 반 학생들에게 반 번호를 정해 주기 위해 운동장에 반 학생들을 키가 가장 작은 학생부터 일렬로 키순으로 세웠습니다.
- 제일 앞에 가장 작은 학생부터 반 번호를 1번부터 N번까지 부여합니다.
- 현수는 짝꿍보다 키가 큽니다.
- 그런데 현수가 앞 번호를 받고 싶어 짝꿍과 자리를 바꿨습니다.
- 선생님은 이 사실을 모르고 학생들에게 서있는 순서대로 번호를 부여했습니다.
- 현수와 짝꿍이 자리를 바꾼 반 학생들의 일렬로 서 있는 키 정보가 주어질 때
- 현수가 받은 번호와 현수 짝꿍이 받은 번호를 차례로 출력하는 프로그램을 작성하세요.

[입력]
- 첫 번째 줄에 자연수 N(5<=N<=100)이 주어진다.
- 두 번째 줄에 제일 앞에부터 일렬로 서있는 학생들의 키가 주어진다.
- 키(높이) 값 H는 (120<=H<=180)의 자연수 입니다.

[출력]
- 첫 번째 줄에 현수의 반 번호와 짝꿍의 반 번호를 차례로 출력합니다.

[입력예제 1]
- [120, 125, 152, 130, 135, 135, 143, 127, 160]

[출력예제 1]
- [3, 8]

[입력예제 2]
- [120, 130, 150, 150, 130, 150]

[출력예제 2]
- [3, 5]

[입력예제 3]
- [152, 125, 127, 130, 135, 135, 143, 120, 160]

[출력예제 3]
- [1, 8]

[입력예제 4]
- [160, 125, 127, 130, 135, 135, 143, 152, 120]

[출력예제 4]
- [1, 9]
*/

/** 잘못된 솔루션 - 시간복잡도 N */
const badSolution = (arr) => {
  const result = [];

  for (let i = 0; i < arr.length - 1; i++) {
    if (arr[i] > arr[i + 1]) {
      if (result.length === 1) result.push(i + 2);
      if (result.length === 0) result.push(i + 1);
    }
  }

  return result;
};

/** 레퍼런스 - 시간복잡도 N * log(N) */
const reference = (arr) => {
  const result = [];
  const sortedArr = [...arr].sort((a, b) => a - b);

  for (let i = 0; i < arr.length; i++) {
    if (arr[i] !== sortedArr[i]) result.push(i + 1);
  }

  return result;
};

/** 테스트 케이스1 */
let arr = [120, 125, 152, 130, 135, 135, 143, 127, 160];

console.log(1, badSolution(arr)); // [3, 8]
console.log(1, reference(arr)); // [3, 8]

/** 테스트 케이스2 */
arr = [120, 130, 150, 150, 130, 150];
console.log(2, badSolution(arr)); // [3, 5]
console.log(2, reference(arr)); // [3, 5]

/** 테스트 케이스3 */
arr = [152, 125, 127, 130, 135, 135, 143, 120, 160];
console.log(3, badSolution(arr)); // [1, 8]
console.log(3, reference(arr)); // [1, 8]

/** 테스트 케이스4 */
arr = [160, 125, 127, 130, 135, 135, 143, 152, 120];
console.log(4, badSolution(arr)); // [1, 9]
console.log(4, reference(arr)); // [1, 9]

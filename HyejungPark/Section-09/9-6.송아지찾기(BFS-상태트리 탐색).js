/*
문제 송아지 찾기 (BFS : 상태트리 탐색)

현수는 송아지를 잃어버렸다. 다행히 송아지에는 위치 추적기가 달려있다. 현수의 위치와 송아지의 위치가 **수직선상의 좌표 점으로 주어지면 현수는 현재 위치에서 송아지의 위치까지 다음과 같은 방법으로 이동한다. 송아지는 움직이지 않고 제자리에 있다.

현수는 스카이 콩콩을 타고가는데, 한 번의 점프로 앞으로 1, 뒤로1, 앞으로 5를 이동할 수 있다.

최소 몇번의 점프로 현수가 송아지의 위치까지 갈 수 있는지 구하세요!

[입력 설명]
첫 번째 줄에 현수의 위치 S와 송아지의 위치 E가 주어진다. 직선의 좌표 점은 1 부터 10,000 까지이다.

[출력 설명]
점프의 최소횟수를 구한다. 답은 1 이상 
*/

const s = 5;
const e = 14;

const solution = (s, e) => {
  let answer = 0;
  let visited = Array.from({length: 10001}, () => 0);
  // dis => 이 위치에 오기까지 점프 횟수를 기록하는 배열
  let dis = Array.from({length: 10001}, () => 0);
  const queue = [];
  visited[s] = 1;
  queue.push(s);
  dis[s] = 0;

  while (queue.length) {
    // 출발 좌표
    let x = queue.shift();
    for (let nx of [x - 1, x + 1, x + 5]) {
      if (nx === e) return dis[x] + 1;
      if (nx > 0 && nx <= 10000 && visited[nx] === 0) {
        visited[nx] = 1;
        dis[nx] = dis[x] + 1;
        // nx이전 x로부터 1회 점프하여 온 거리이기 때문에...! 이전 dis의 x좌표 (점프횟수) 로 부터 + 1을 하여 추가해야함.
        queue.push(nx);
      }
    }
  }
  return answer;
};

const result = solution(s, e);
console.log(result);

/*
이 문제가 BFS 문제인 이유...
현수가 스카이 콩콩을 타고 갈 수 있는 경우의 수 3가지 만큼
3가지 상태가 생기고, 여기서 또 가지를 뻗어나가는 트리 형태가 되기 때문이다.

현재 현수의 상태 5를 루트 노드로 보고,
-1, +1, +5 의 각 상태에 따른 다음 노드 4,6,10 이 있다고 할 때 우선 이 다음 노드를 모두 queue에 넣고 하나씩 꺼내면서 송아지의 위치와 맞는지 확인, 위치와 맞지 않다면 다시 큐에 그 현재 위치로부터 갈 수 있는 다음 위치를 넣고 반복!

*/
